{"version":3,"sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","assets/images/logo.svg","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["DarkModeSwitcher","onClose","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","FormControlLabel","control","Switch","checked","name","color","onChange","label","useStyles","makeStyles","theme","root","cursor","logoImg","width","height","Logo","setHomeIsActive","classes","spy","smooth","duration","offset","to","onSetActive","onSetInactive","className","src","LogoImg","alt","languages","code","country_code","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","LangSelector","props","useState","anchorEl","setAnchorEl","currentLanguage","find","elem","Button","variant","onClick","e","currentTarget","KeyboardArrowDownSharp","style","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","i18n","changeLanguage","smoothScrollProps","AnimatedLink","React","forwardRef","ref","motion","div","custom","animate","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","children","Menu","homeIsActive","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","scrollEvent","register","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","MuiLink","href","underline","marginLeft","drawer","background","default","list","fullList","listItem","justifyContent","padding","btnContainer","active","MobileMenu","onOpen","listItemProps","button","Link","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","line","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","rest","variants","initial","rotate","x","logo","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","useTheme","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","Hidden","smDown","mdUp"],"mappings":"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","file":"static/js/12.d076de07.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport ThemeContext from \"../../contexts/themeContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DarkModeSwitcher = ({ onClose }) => {\r\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\r\n    const { t } = useTranslation()\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    checked={isDarkMode}\r\n                    name=\"checkedDarkMode\"\r\n                    color=\"primary\"\r\n                    onChange={() => {\r\n                        if (onClose) {\r\n                            onClose();\r\n                        }\r\n                        setIsDarkMode(!isDarkMode);\r\n                    }}\r\n                />\r\n            }\r\n            label={t('dark_mode')}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\r\n\r\nexport default DarkModeSwitcher","export default __webpack_public_path__ + \"static/media/logo.0617e800.svg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Link } from 'react-scroll'\r\nimport LogoImg from '../../assets/images/logo.svg'\r\n\r\nconst Logo = ({ setHomeIsActive, ...rest }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Link\r\n      spy\r\n      smooth\r\n      duration={500}\r\n      offset={-70}\r\n      to=\"home\"\r\n      onSetActive={() => setHomeIsActive(true)}\r\n      onSetInactive={() => setHomeIsActive(false)}\r\n      className={classes.root}\r\n    >\r\n      <img src={LogoImg} alt=\"Jonathan Hebert\" className={classes.logoImg} />\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n  logoImg: {\r\n    width: '270px',\r\n    height: '50px',\r\n  },\r\n}))\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { makeStyles, Menu, MenuItem, Button } from '@material-ui/core'\r\nimport { KeyboardArrowDownSharp } from '@material-ui/icons'\r\nimport i18n from 'i18next'\r\nimport { useTranslation } from 'react-i18next'\r\nimport 'flag-icon-css/css/flag-icon.min.css'\r\n\r\nconst languages = [\r\n  {\r\n    code: 'en',\r\n    name: 'EN',\r\n    country_code: 'gb',\r\n  },\r\n]\r\n\r\nconst LangSelector = (props) => {\r\n  const classes = useStyles()\r\n  const { t } = useTranslation()\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const handleClose = (code) => {\r\n    i18n.changeLanguage(code)\r\n    setAnchorEl(null)\r\n    if (props.onClose) {\r\n      props.onClose()\r\n    }\r\n  }\r\n\r\n  const currentLanguage = languages.find((elem) => elem.code === t('language'))\r\n\r\n  return (\r\n    <div {...props}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e) => setAnchorEl(e.currentTarget)}\r\n      >\r\n        {currentLanguage && (\r\n          <>\r\n            <span\r\n              className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`}\r\n            />\r\n            {currentLanguage.name}\r\n          </>\r\n        )}\r\n        <KeyboardArrowDownSharp style={{ color: 'white' }} />\r\n      </Button>\r\n      <Menu\r\n        id=\"profile-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n        keepMounted\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        className={classes.profileMenu}\r\n        disableScrollLock\r\n      >\r\n        <MenuItem\r\n          className={classes.menuItem}\r\n          onClick={() => handleClose('en')}\r\n        >\r\n          <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\r\n          EN\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileMenu: {\r\n    '& .MuiPaper-root': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      marginTop: '2px',\r\n      boxShadow: theme.shadows[4],\r\n    },\r\n  },\r\n  menuItem: {\r\n    '&:hover': {\r\n      backgroundColor: theme.backgroundSecondary,\r\n    },\r\n  },\r\n  flagIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nexport default LangSelector\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  makeStyles,\r\n  withStyles,\r\n  Link as MuiLink,\r\n} from '@material-ui/core'\r\nimport { motion, useAnimation } from 'framer-motion'\r\nimport { Link, Events } from 'react-scroll'\r\nimport LangSelector from './LangSelector'\r\nimport LoaderContext from '../../contexts/loaderContext'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst smoothScrollProps = {\r\n  spy: true,\r\n  smooth: true,\r\n  offset: -70,\r\n  duration: 500,\r\n}\r\n\r\nconst AnimatedLink = React.forwardRef((props, ref) => (\r\n  <motion.div ref={ref} custom={props.custom} animate={props.animate}>\r\n    <Link {...smoothScrollProps} {...props} />\r\n  </motion.div>\r\n))\r\n\r\nconst Menu = ({ homeIsActive }) => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(false)\r\n  const [isScrolling, setIsScrolling] = useState(false)\r\n  const { isLoading } = useContext(LoaderContext)\r\n  const controls = useAnimation()\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    Events.scrollEvent.register('begin', (to, element) => {\r\n      setIsScrolling(true)\r\n    })\r\n\r\n    Events.scrollEvent.register('end', (to, element) => {\r\n      setIsScrolling(false)\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      controls.start((i) => ({\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: { delay: i * 0.1 + 0.3 },\r\n      }))\r\n    } else {\r\n      controls.start({ opacity: 0, y: -5 })\r\n    }\r\n  }, [isLoading, controls])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const spyHandleChange = (index) => {\r\n    if (!isScrolling) {\r\n      setValue(index)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (homeIsActive) {\r\n      setValue(false)\r\n    }\r\n  }, [homeIsActive])\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <StyledTabs\r\n        className={classes.tabs}\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        aria-label=\"disabled tabs example\"\r\n      >\r\n        <StyledTab\r\n          component={AnimatedLink}\r\n          custom={0}\r\n          animate={controls}\r\n          to=\"about\"\r\n          label={t('menu_about')}\r\n          onSetActive={() => spyHandleChange(0)}\r\n          onSetInactive={() => spyHandleChange(false)}\r\n        />\r\n        <StyledTab\r\n          component={AnimatedLink}\r\n          animate={controls}\r\n          custom={1}\r\n          to=\"experience\"\r\n          label={t('menu_experience')}\r\n          onSetActive={() => spyHandleChange(1)}\r\n        />\r\n        <StyledTab\r\n          component={AnimatedLink}\r\n          animate={controls}\r\n          custom={2}\r\n          to=\"projects\"\r\n          label={t('menu_projects')}\r\n          onSetActive={() => spyHandleChange(2)}\r\n        />\r\n        <StyledTab\r\n          component={AnimatedLink}\r\n          animate={controls}\r\n          custom={3}\r\n          to=\"contact\"\r\n          label={t('menu_contact')}\r\n          onSetActive={() => spyHandleChange(3)}\r\n        />\r\n      </StyledTabs>\r\n      <motion.div custom={4} animate={controls}>\r\n        <Button\r\n          component={MuiLink}\r\n          href=\"/JONATHAN-HEBERT.pdf\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          underline=\"none\"\r\n        >\r\n          {t('menu_resume')}\r\n        </Button>\r\n      </motion.div>\r\n      <motion.div custom={5} animate={controls}>\r\n        <LangSelector style={{ marginLeft: '32px' }} />\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  tabs: {\r\n    marginRight: theme.spacing(4),\r\n  },\r\n  navMenuItem: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    transition: '.2s',\r\n    minWidth: 120,\r\n    '&:hover': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />)\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    '& > span': {\r\n      maxWidth: 20,\r\n    },\r\n  },\r\n})((props) => (\r\n  <Tabs\r\n    {...props}\r\n    variant=\"fullWidth\"\r\n    TabIndicatorProps={{ children: <span /> }}\r\n  />\r\n))\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  List,\r\n  Button,\r\n  Divider,\r\n  ListItem,\r\n  Link as MuiLink,\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-scroll'\r\nimport DarkModeSwitcher from '../DarkModeSwitcher'\r\nimport LangSelector from './LangSelector'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst MobileMenu = ({ open, onClose, onOpen }) => {\r\n  const classes = useStyles()\r\n  const { t } = useTranslation()\r\n  const listItemProps = {\r\n    button: true,\r\n    component: Link,\r\n    onClick: onClose,\r\n    onKeyDown: onClose,\r\n    spy: true,\r\n    smooth: true,\r\n    offset: 0,\r\n    duration: 500,\r\n    className: classes.listItem,\r\n    activeClass: classes.active,\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onClose}\r\n      classes={{ paper: classes.drawer }}\r\n    >\r\n      <div className={classes.list} role=\"presentation\">\r\n        <List className={classes.fullList}>\r\n          <ListItem {...listItemProps} to=\"about\">\r\n            {t('menu_about')}\r\n          </ListItem>\r\n          <ListItem {...listItemProps} to=\"experience\">\r\n            {t('menu_experience')}\r\n          </ListItem>\r\n          <ListItem {...listItemProps} to=\"projects\">\r\n            {t('menu_projects')}\r\n          </ListItem>\r\n          <ListItem {...listItemProps} to=\"contact\">\r\n            {t('menu_contact')}\r\n          </ListItem>\r\n          <ListItem className={classes.btnContainer}>\r\n            <Button\r\n              component={MuiLink}\r\n              href=\"/JONATHAN-HEBERT.pdf\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              underline=\"none\"\r\n            >\r\n              {t('menu_resume')}\r\n            </Button>\r\n          </ListItem>\r\n          <ListItem className={classes.btnContainer}>\r\n            <LangSelector onClose={onClose} />\r\n          </ListItem>\r\n          <ListItem className={classes.btnContainer}>\r\n            <DarkModeSwitcher onClose={onClose} />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(2, 0),\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(80,80,80)',\r\n    },\r\n  },\r\n  btnContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  active: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}))\r\n\r\nexport default MobileMenu\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst HamburgerIcon = ({isOpen,...rest}) => {\r\n    const controls = useAnimation()\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            controls.start(\"animate\")\r\n        } else {\r\n            controls.start(\"initial\")\r\n        }\r\n    }, [isOpen,controls]);\r\n    return (\r\n        <motion.div className={classes.container} {...rest}>\r\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        overflow:'hidden',\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"flex-end\",\r\n        cursor:\"pointer\",\r\n        padding:\"2px\"\r\n    },\r\n    line: {\r\n        height: \"3px\",\r\n        backgroundColor: theme.palette.text.secondary,\r\n    },\r\n    line1: {\r\n        width: \"35px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line2: {\r\n        width: \"25px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line3: {\r\n        width: \"35px\",\r\n    },\r\n}));\r\n\r\nexport default HamburgerIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport Logo from \"./Logo\";\r\nimport Menu from \"./Menu\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport HamburgerIcon from \"./HamburgerIcon\";\r\nimport loaderContext from \"../../contexts/loaderContext\";\r\n\r\nconst Navbar = () => {\r\n    const [homeIsActive, setHomeIsActive]=useState(true)\r\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\r\n    const { isLoading } = useContext(loaderContext);\r\n    const controls = useAnimation();\r\n    const theme = useTheme();\r\n    const [scroll, setScroll] = useState(false);\r\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\r\n    const classes = useStyles({ scroll, isMobile });\r\n    const handleNav = () => setScroll(window.scrollY > 30);\r\n    window.addEventListener(\"scroll\", handleNav);\r\n\r\n    const appbarVariants = {\r\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\r\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start({\r\n                y: 0,\r\n                transition: {\r\n                    delay: 0.05,\r\n                    type: \"spring\",\r\n                    stiffness: 260,\r\n                    damping: 20,\r\n                },\r\n            });\r\n        } else {\r\n            controls.start({ y: -100 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    return (\r\n        <motion.div\r\n            animate={controls}\r\n        >\r\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\r\n                <Toolbar\r\n                    className={classes.toolbar}\r\n                    component={motion.div}\r\n                    variants={appbarVariants}\r\n                    animate={scroll ? \"scrolled\" : \"initial\"}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 260,\r\n                        damping: 20,\r\n                    }}\r\n                >\r\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\r\n                    <Hidden smDown>\r\n                        <Menu homeIsActive={homeIsActive} />\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Hidden mdUp>\r\n                <MobileMenu\r\n                    open={mobileNavIsOpen}\r\n                    onClose={() => setMobileNavIsOpen(false)}\r\n                    onOpen={() => setMobileNavIsOpen(true)}\r\n                />\r\n            </Hidden>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: \"150px\",\r\n    },\r\n    navbar: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n        alignItems:\"center\",\r\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\r\n    },\r\n}));\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\nexport default Navbar;\r\n"],"sourceRoot":""}